// swift-tools-version:5.3

import PackageDescription

let package = Package(
    name: "ffmpegkit",
    products: [
        .library(name: "ffmpegkit", targets: [
            "ffmpegkit",
            "lame",
            "libavcodec",
            "libavdevice",
            "libavfilter",
            "libavformat",
            "libavutil",
            "libilbc",
            "libogg",
            "libopencore-amrnb",
            "libsndfile",
            "libswresample",
            "libswscale",
            "libvorbis",
            "libvorbisenc",
            "libvorbisfile",
            "opus",
            "shine",
            "soxr",
            "speex",
            "twolame",
            "vo-amrwbenc"
          ]),
//        .library(name: "lame", targets: ["lame"]),
//           .library(name: "libavcodec", targets: ["libavcodec"]),
//           .library(name: "libavdevice", targets: ["libavdevice"]),
//           .library(name: "libavfilter", targets: ["libavfilter"]),
//           .library(name: "libavformat", targets: ["libavformat"]),
//           .library(name: "libavutil", targets: ["libavutil"]),
//           .library(name: "libilbc", targets: ["libilbc"]),
//           .library(name: "libogg", targets: ["libogg"]),
//           .library(name: "libopencore-amrnb", targets: ["libopencore-amrnb"]),
//           .library(name: "libsndfile", targets: ["libsndfile"]),
//           .library(name: "libswresample", targets: ["libswresample"]),
//           .library(name: "libswscale", targets: ["libswscale"]),
//           .library(name: "libvorbis", targets: ["libvorbis"]),
//           .library(name: "libvorbisenc", targets: ["libvorbisenc"]),
//           .library(name: "libvorbisfile", targets: ["libvorbisfile"]),
//           .library(name: "opus", targets: ["opus"]),
//           .library(name: "shine", targets: ["shine"]),
//           .library(name: "soxr", targets: ["soxr"]),
//           .library(name: "speex", targets: ["speex"]),
//           .library(name: "twolame", targets: ["twolame"]),
//           .library(name: "vo-amrwbenc", targets: ["vo-amrwbenc"])
    ],
    targets: [
//        .target(
//                 name: "ffmpegkit",
//                 dependencies: ["ffmpegkitTarget"]
//              ),
        .binaryTarget(name: "ffmpegkit",        path: "artifacts/ffmpegkit.xcframework"),
        .binaryTarget(name: "lame",             path: "artifacts/lame.xcframework"),
        .binaryTarget(name: "libavcodec",       path: "artifacts/libavcodec.xcframework"),
        .binaryTarget(name: "libavdevice",      path: "artifacts/libavdevice.xcframework"),
        .binaryTarget(name: "libavfilter",      path: "artifacts/libavfilter.xcframework"),
        .binaryTarget(name: "libavformat",      path: "artifacts/libavformat.xcframework"),
        .binaryTarget(name: "libavutil",        path: "artifacts/libavutil.xcframework"),
        .binaryTarget(name: "libilbc",          path: "artifacts/libilbc.xcframework"),
        .binaryTarget(name: "libogg",           path: "artifacts/libogg.xcframework"),
        .binaryTarget(name: "libopencore-amrnb", path: "artifacts/libopencore-amrnb.xcframework"),
        .binaryTarget(name: "libsndfile",       path: "artifacts/libsndfile.xcframework"),
        .binaryTarget(name: "libswresample",    path: "artifacts/libswresample.xcframework"),
        .binaryTarget(name: "libswscale",       path: "artifacts/libswscale.xcframework"),
        .binaryTarget(name: "libvorbis",        path: "artifacts/libvorbis.xcframework"),
        .binaryTarget(name: "libvorbisenc",     path: "artifacts/libvorbisenc.xcframework"),
        .binaryTarget(name: "libvorbisfile",    path: "artifacts/libvorbisfile.xcframework"),
        .binaryTarget(name: "opus",             path: "artifacts/opus.xcframework"),
        .binaryTarget(name: "shine",            path: "artifacts/shine.xcframework"),
        .binaryTarget(name: "soxr",             path: "artifacts/soxr.xcframework"),
        .binaryTarget(name: "speex",            path: "artifacts/speex.xcframework"),
        .binaryTarget(name: "twolame",          path: "artifacts/twolame.xcframework"),
        .binaryTarget(name: "vo-amrwbenc",      path: "artifacts/vo-amrwbenc.xcframework")
    ]
)
